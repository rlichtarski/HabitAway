name: habit_away

concurrency:
  group: $-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Generate Firebase Options, Build, and Test
    runs-on: ubuntu-latest

    env:
      FIREBASE_DEV_ANDROID_API_KEY: ${{ secrets.FIREBASE_DEV_ANDROID_API_KEY }}
      FIREBASE_DEV_IOS_API_KEY: ${{ secrets.FIREBASE_DEV_IOS_API_KEY }}
      FIREBASE_DEV_ANDROID_APP_ID: ${{ secrets.FIREBASE_DEV_ANDROID_APP_ID }}
      FIREBASE_DEV_IOS_APP_ID: ${{ secrets.FIREBASE_DEV_IOS_APP_ID }}
      FIREBASE_DEV_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_DEV_MESSAGING_SENDER_ID }}
      FIREBASE_DEV_PROJECT_ID: ${{ secrets.FIREBASE_DEV_PROJECT_ID }}
      FIREBASE_DEV_STORAGE_BUCKET: ${{ secrets.FIREBASE_DEV_STORAGE_BUCKET }}
      FIREBASE_DEV_IOS_CLIENT_ID: ${{ secrets.FIREBASE_DEV_IOS_CLIENT_ID }}
      FIREBASE_DEV_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_DEV_IOS_BUNDLE_ID }}

      FIREBASE_PROD_ANDROID_API_KEY: ${{ secrets.FIREBASE_PROD_ANDROID_API_KEY }}
      FIREBASE_PROD_IOS_API_KEY: ${{ secrets.FIREBASE_PROD_IOS_API_KEY }}
      FIREBASE_PROD_ANDROID_APP_ID: ${{ secrets.FIREBASE_PROD_ANDROID_APP_ID }}
      FIREBASE_PROD_IOS_APP_ID: ${{ secrets.FIREBASE_PROD_IOS_APP_ID }}
      FIREBASE_PROD_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_PROD_MESSAGING_SENDER_ID }}
      FIREBASE_PROD_PROJECT_ID: ${{ secrets.FIREBASE_PROD_PROJECT_ID }}
      FIREBASE_PROD_STORAGE_BUCKET: ${{ secrets.FIREBASE_PROD_STORAGE_BUCKET }}
      FIREBASE_PROD_IOS_CLIENT_ID: ${{ secrets.FIREBASE_PROD_IOS_CLIENT_ID }}
      FIREBASE_PROD_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_PROD_IOS_BUNDLE_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: stable

      - name: Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore="!*"

      - name: Generate Firebase Options
        run: |
          echo "Generating Firebase options files..."
          dart scripts/generate_firebase_options.dart

      - name: List Generated Files
        run: |
          echo "Listing generated Firebase options files..."
          ls -al lib

      - name: Format Generated Files
        run: dart format lib

      - name: Install Dependencies
        run: flutter pub get

      - name: Verify Firebase Options
        run: |
          echo "Verifying firebase_options files..."
          ls -al lib/firebase_options_dev.dart
          ls -al lib/firebase_options_prod.dart

      - name: Analyze
        run: flutter analyze lib test

      # - name: Run Tests
      #   run: very_good test -j 4 --coverage --test-randomize-ordering-seed random

      # - name: Check Code Coverage
      #   uses: VeryGoodOpenSource/very_good_coverage@v3
      #   with:
      #     path: coverage/lcov.info
      #     exclude: "*.g.dart *.gen.dart *.freezed.dart"
      #     min_coverage: 0
