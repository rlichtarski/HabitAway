name: habit_away

concurrency:
  group: $-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  firebase-setup:
    name: Generate Firebase Options
    runs-on: ubuntu-latest

    env:
      FIREBASE_DEV_ANDROID_API_KEY: ${{ secrets.FIREBASE_DEV_ANDROID_API_KEY }}
      FIREBASE_DEV_IOS_API_KEY: ${{ secrets.FIREBASE_DEV_IOS_API_KEY }}
      FIREBASE_DEV_ANDROID_APP_ID: ${{ secrets.FIREBASE_DEV_ANDROID_APP_ID }}
      FIREBASE_DEV_IOS_APP_ID: ${{ secrets.FIREBASE_DEV_IOS_APP_ID }}
      FIREBASE_DEV_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_DEV_MESSAGING_SENDER_ID }}
      FIREBASE_DEV_PROJECT_ID: ${{ secrets.FIREBASE_DEV_PROJECT_ID }}
      FIREBASE_DEV_STORAGE_BUCKET: ${{ secrets.FIREBASE_DEV_STORAGE_BUCKET }}
      FIREBASE_DEV_IOS_CLIENT_ID: ${{ secrets.FIREBASE_DEV_IOS_CLIENT_ID }}
      FIREBASE_DEV_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_DEV_IOS_BUNDLE_ID }}

      FIREBASE_PROD_ANDROID_API_KEY: ${{ secrets.FIREBASE_PROD_ANDROID_API_KEY }}
      FIREBASE_PROD_IOS_API_KEY: ${{ secrets.FIREBASE_PROD_IOS_API_KEY }}
      FIREBASE_PROD_ANDROID_APP_ID: ${{ secrets.FIREBASE_PROD_ANDROID_APP_ID }}
      FIREBASE_PROD_IOS_APP_ID: ${{ secrets.FIREBASE_PROD_IOS_APP_ID }}
      FIREBASE_PROD_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_PROD_MESSAGING_SENDER_ID }}
      FIREBASE_PROD_PROJECT_ID: ${{ secrets.FIREBASE_PROD_PROJECT_ID }}
      FIREBASE_PROD_STORAGE_BUCKET: ${{ secrets.FIREBASE_PROD_STORAGE_BUCKET }}
      FIREBASE_PROD_IOS_CLIENT_ID: ${{ secrets.FIREBASE_PROD_IOS_CLIENT_ID }}
      FIREBASE_PROD_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_PROD_IOS_BUNDLE_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      - name: Generate Firebase Options
        run: |
          echo "Generating Firebase options files..."
          dart scripts/generate_firebase_options.dart

      - name: Cache Generated Firebase Options
        uses: actions/cache@v2
        with:
          path: lib/
          key: ${{ runner.os }}-firebase-options-${{ hashFiles('lib/firebase_options_dev.dart', 'lib/firebase_options_prod.dart') }}

      - name: List lib/ Directory
        run: ls -al lib

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: firebase-setup
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: stable
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore="!*"

      - name: Check Formatting
        run: dart format --line-length 80 --set-exit-if-changed lib test

      - name: Clean and Rebuild Flutter Project
        run: flutter clean && flutter pub get

      - name: Verify Generated Firebase Options Files
        run: |
          echo "Verifying firebase_options files..."
          ls -al lib/firebase_options_dev.dart
          ls -al lib/firebase_options_prod.dart

      - name: Analyze
        run: flutter analyze lib test

      - name: Run Tests
        run: very_good test -j 4 --coverage --test-randomize-ordering-seed random

      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: coverage/lcov.info
          exclude: "*.g.dart *.gen.dart *.freezed.dart"
          min_coverage: 100

# jobs:
#   semantic-pull-request:
#     uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

#   firebase-setup:
#     name: Generate Firebase Options
#     runs-on: ubuntu-latest

#     env:
#       FIREBASE_DEV_ANDROID_API_KEY: ${{ secrets.FIREBASE_DEV_ANDROID_API_KEY }}
#       FIREBASE_DEV_IOS_API_KEY: ${{ secrets.FIREBASE_DEV_IOS_API_KEY }}
#       FIREBASE_DEV_ANDROID_APP_ID: ${{ secrets.FIREBASE_DEV_ANDROID_APP_ID }}
#       FIREBASE_DEV_IOS_APP_ID: ${{ secrets.FIREBASE_DEV_IOS_APP_ID }}
#       FIREBASE_DEV_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_DEV_MESSAGING_SENDER_ID }}
#       FIREBASE_DEV_PROJECT_ID: ${{ secrets.FIREBASE_DEV_PROJECT_ID }}
#       FIREBASE_DEV_STORAGE_BUCKET: ${{ secrets.FIREBASE_DEV_STORAGE_BUCKET }}
#       FIREBASE_DEV_IOS_CLIENT_ID: ${{ secrets.FIREBASE_DEV_IOS_CLIENT_ID }}
#       FIREBASE_DEV_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_DEV_IOS_BUNDLE_ID }}

#       FIREBASE_PROD_ANDROID_API_KEY: ${{ secrets.FIREBASE_PROD_ANDROID_API_KEY }}
#       FIREBASE_PROD_IOS_API_KEY: ${{ secrets.FIREBASE_PROD_IOS_API_KEY }}
#       FIREBASE_PROD_ANDROID_APP_ID: ${{ secrets.FIREBASE_PROD_ANDROID_APP_ID }}
#       FIREBASE_PROD_IOS_APP_ID: ${{ secrets.FIREBASE_PROD_IOS_APP_ID }}
#       FIREBASE_PROD_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_PROD_MESSAGING_SENDER_ID }}
#       FIREBASE_PROD_PROJECT_ID: ${{ secrets.FIREBASE_PROD_PROJECT_ID }}
#       FIREBASE_PROD_STORAGE_BUCKET: ${{ secrets.FIREBASE_PROD_STORAGE_BUCKET }}
#       FIREBASE_PROD_IOS_CLIENT_ID: ${{ secrets.FIREBASE_PROD_IOS_CLIENT_ID }}
#       FIREBASE_PROD_IOS_BUNDLE_ID: ${{ secrets.FIREBASE_PROD_IOS_BUNDLE_ID }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2

#       - name: Generate Firebase Options
#         run: |
#           echo "Generating Firebase options files..."
#           dart scripts/generate_firebase_options.dart

#       - name: List lib/ Directory
#         run: ls -al lib

#   build:
#     name: Build and Test
#     uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_package.yml@v1
#     needs: firebase-setup
#     with:
#       flutter_channel: stable
#       coverage_excludes: "*.g.dart *.gen.dart *.freezed.dart"
